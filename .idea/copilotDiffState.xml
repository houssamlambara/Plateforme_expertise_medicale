<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/pom.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/pom.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;&#10;         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#10;         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;&#10;    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;&#10;&#10;    &lt;groupId&gt;org.Platform_expertise_medicle&lt;/groupId&gt;&#10;    &lt;artifactId&gt;Platform_expertise_medicale&lt;/artifactId&gt;&#10;    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;&#10;    &lt;name&gt;Platform_expertise_medicle&lt;/name&gt;&#10;    &lt;packaging&gt;war&lt;/packaging&gt;&#10;&#10;    &lt;properties&gt;&#10;        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;&#10;        &lt;maven.compiler.target&gt;17&lt;/maven.compiler.target&gt;&#10;        &lt;maven.compiler.source&gt;17&lt;/maven.compiler.source&gt;&#10;        &lt;junit.version&gt;5.13.2&lt;/junit.version&gt;&#10;    &lt;/properties&gt;&#10;&#10;    &lt;dependencies&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;jakarta.servlet&lt;/groupId&gt;&#10;            &lt;artifactId&gt;jakarta.servlet-api&lt;/artifactId&gt;&#10;            &lt;version&gt;6.0.0&lt;/version&gt;&#10;            &lt;scope&gt;provided&lt;/scope&gt;&#10;        &lt;/dependency&gt;&#10;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;jakarta.servlet.jsp.jstl&lt;/groupId&gt;&#10;            &lt;artifactId&gt;jakarta.servlet.jsp.jstl-api&lt;/artifactId&gt;&#10;            &lt;version&gt;3.0.0&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;org.glassfish.web&lt;/groupId&gt;&#10;            &lt;artifactId&gt;jakarta.servlet.jsp.jstl&lt;/artifactId&gt;&#10;            &lt;version&gt;3.0.1&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;jakarta.persistence&lt;/groupId&gt;&#10;            &lt;artifactId&gt;jakarta.persistence-api&lt;/artifactId&gt;&#10;            &lt;version&gt;3.1.0&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;org.hibernate.orm&lt;/groupId&gt;&#10;            &lt;artifactId&gt;hibernate-core&lt;/artifactId&gt;&#10;            &lt;version&gt;6.4.4.Final&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;com.mysql&lt;/groupId&gt;&#10;            &lt;artifactId&gt;mysql-connector-j&lt;/artifactId&gt;&#10;            &lt;version&gt;8.3.0&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;&#10;        &lt;!-- BCrypt pour le hachage des mots de passe --&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;org.mindrot&lt;/groupId&gt;&#10;            &lt;artifactId&gt;jbcrypt&lt;/artifactId&gt;&#10;            &lt;version&gt;0.4&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;    &lt;/dependencies&gt;&#10;&#10;    &lt;build&gt;&#10;        &lt;plugins&gt;&#10;            &lt;plugin&gt;&#10;                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;&#10;                &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;&#10;                &lt;version&gt;3.4.0&lt;/version&gt;&#10;            &lt;/plugin&gt;&#10;            &lt;plugin&gt;&#10;                &lt;groupId&gt;org.apache.tomcat.maven&lt;/groupId&gt;&#10;                &lt;artifactId&gt;tomcat7-maven-plugin&lt;/artifactId&gt;&#10;                &lt;version&gt;2.2&lt;/version&gt;&#10;                &lt;configuration&gt;&#10;                    &lt;port&gt;8080&lt;/port&gt;&#10;                    &lt;path&gt;/&lt;/path&gt;&#10;                &lt;/configuration&gt;&#10;            &lt;/plugin&gt;&#10;        &lt;/plugins&gt;&#10;    &lt;/build&gt;&#10;&lt;/project&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#13;&#10;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;&#13;&#10;         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#13;&#10;         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;&#13;&#10;    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;&#13;&#10;&#13;&#10;    &lt;groupId&gt;org.Platform_expertise_medicle&lt;/groupId&gt;&#13;&#10;    &lt;artifactId&gt;Platform_expertise_medicale&lt;/artifactId&gt;&#13;&#10;    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;&#13;&#10;    &lt;name&gt;Platform_expertise_medicle&lt;/name&gt;&#13;&#10;    &lt;packaging&gt;war&lt;/packaging&gt;&#13;&#10;&#13;&#10;    &lt;properties&gt;&#13;&#10;        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;&#13;&#10;        &lt;maven.compiler.target&gt;17&lt;/maven.compiler.target&gt;&#13;&#10;        &lt;maven.compiler.source&gt;17&lt;/maven.compiler.source&gt;&#13;&#10;        &lt;junit.version&gt;5.13.2&lt;/junit.version&gt;&#13;&#10;    &lt;/properties&gt;&#13;&#10;&#13;&#10;    &lt;dependencies&gt;&#13;&#10;        &lt;dependency&gt;&#13;&#10;            &lt;groupId&gt;jakarta.servlet&lt;/groupId&gt;&#13;&#10;            &lt;artifactId&gt;jakarta.servlet-api&lt;/artifactId&gt;&#13;&#10;            &lt;version&gt;6.0.0&lt;/version&gt;&#13;&#10;            &lt;scope&gt;provided&lt;/scope&gt;&#13;&#10;        &lt;/dependency&gt;&#13;&#10;&#13;&#10;        &lt;dependency&gt;&#13;&#10;            &lt;groupId&gt;jakarta.servlet.jsp.jstl&lt;/groupId&gt;&#13;&#10;            &lt;artifactId&gt;jakarta.servlet.jsp.jstl-api&lt;/artifactId&gt;&#13;&#10;            &lt;version&gt;3.0.0&lt;/version&gt;&#13;&#10;        &lt;/dependency&gt;&#13;&#10;&#13;&#10;        &lt;dependency&gt;&#13;&#10;            &lt;groupId&gt;org.glassfish.web&lt;/groupId&gt;&#13;&#10;            &lt;artifactId&gt;jakarta.servlet.jsp.jstl&lt;/artifactId&gt;&#13;&#10;            &lt;version&gt;3.0.1&lt;/version&gt;&#13;&#10;        &lt;/dependency&gt;&#13;&#10;&#13;&#10;        &lt;dependency&gt;&#13;&#10;            &lt;groupId&gt;jakarta.persistence&lt;/groupId&gt;&#13;&#10;            &lt;artifactId&gt;jakarta.persistence-api&lt;/artifactId&gt;&#13;&#10;            &lt;version&gt;3.1.0&lt;/version&gt;&#13;&#10;        &lt;/dependency&gt;&#13;&#10;&#13;&#10;        &lt;dependency&gt;&#13;&#10;            &lt;groupId&gt;org.hibernate.orm&lt;/groupId&gt;&#13;&#10;            &lt;artifactId&gt;hibernate-core&lt;/artifactId&gt;&#13;&#10;            &lt;version&gt;6.4.4.Final&lt;/version&gt;&#13;&#10;        &lt;/dependency&gt;&#13;&#10;&#13;&#10;        &lt;dependency&gt;&#13;&#10;            &lt;groupId&gt;com.mysql&lt;/groupId&gt;&#13;&#10;            &lt;artifactId&gt;mysql-connector-j&lt;/artifactId&gt;&#13;&#10;            &lt;version&gt;8.3.0&lt;/version&gt;&#13;&#10;        &lt;/dependency&gt;&#13;&#10;&#13;&#10;        &lt;!-- BCrypt pour le hachage des mots de passe --&gt;&#13;&#10;        &lt;dependency&gt;&#13;&#10;            &lt;groupId&gt;org.mindrot&lt;/groupId&gt;&#13;&#10;            &lt;artifactId&gt;jbcrypt&lt;/artifactId&gt;&#13;&#10;            &lt;version&gt;0.4&lt;/version&gt;&#13;&#10;        &lt;/dependency&gt;&#13;&#10;    &lt;/dependencies&gt;&#13;&#10;&#13;&#10;    &lt;build&gt;&#13;&#10;        &lt;plugins&gt;&#13;&#10;            &lt;plugin&gt;&#13;&#10;                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;&#13;&#10;                &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;&#13;&#10;                &lt;version&gt;3.4.0&lt;/version&gt;&#13;&#10;            &lt;/plugin&gt;&#13;&#10;            &lt;plugin&gt;&#13;&#10;                &lt;groupId&gt;org.apache.tomcat.maven&lt;/groupId&gt;&#13;&#10;                &lt;artifactId&gt;tomcat7-maven-plugin&lt;/artifactId&gt;&#13;&#10;                &lt;version&gt;2.2&lt;/version&gt;&#13;&#10;                &lt;configuration&gt;&#13;&#10;                    &lt;port&gt;8080&lt;/port&gt;&#13;&#10;                    &lt;path&gt;/&lt;/path&gt;&#13;&#10;                &lt;/configuration&gt;&#13;&#10;            &lt;/plugin&gt;&#13;&#10;        &lt;/plugins&gt;&#13;&#10;    &lt;/build&gt;&#13;&#10;&lt;/project&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/org/platform_expertise_medicle/DAO/UserDAO.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/org/platform_expertise_medicle/DAO/UserDAO.java" />
              <option name="originalContent" value="package org.platform_expertise_medicle.DAO;&#10;&#10;import jakarta.persistence.EntityManager;&#10;import jakarta.persistence.NoResultException;&#10;import jakarta.persistence.TypedQuery;&#10;import org.platform_expertise_medicle.model.MedecinGeneraliste;&#10;import org.platform_expertise_medicle.model.User;&#10;import org.platform_expertise_medicle.util.JpaUtil;&#10;import org.platform_expertise_medicle.util.PasswordUtil;&#10;&#10;import java.util.List;&#10;import java.util.Optional;&#10;&#10;public class UserDAO {&#10;&#10;    public User save(User user) {&#10;        EntityManager em = JpaUtil.getEntityManagerFactory().createEntityManager();&#10;        try {&#10;            em.getTransaction().begin();&#10;            // Hacher le mot de passe avant de sauvegarder (seulement si ce n'est pas déjà haché)&#10;            if (user.getMotDePasse() != null &amp;&amp; !user.getMotDePasse().startsWith(&quot;$2a$&quot;)) {&#10;                user.setMotDePasse(PasswordUtil.hashPassword(user.getMotDePasse()));&#10;            }&#10;            if (user.getId() == 0) {&#10;                em.persist(user);&#10;            } else {&#10;                user = em.merge(user);&#10;            }&#10;            em.getTransaction().commit();&#10;            return user;&#10;        } catch (Exception e) {&#10;            if (em.getTransaction().isActive()) {&#10;                em.getTransaction().rollback();&#10;            }&#10;            throw e;&#10;        } finally {&#10;            em.close();&#10;        }&#10;    }&#10;&#10;    public Optional&lt;User&gt; findById(Long id) {&#10;        EntityManager em = JpaUtil.getEntityManagerFactory().createEntityManager();&#10;        try {&#10;            User user = em.find(User.class, id);&#10;            return Optional.ofNullable(user);&#10;        } finally {&#10;            em.close();&#10;        }&#10;    }&#10;&#10;    public Optional&lt;User&gt; findByEmail(String email) {&#10;        EntityManager em = JpaUtil.getEntityManagerFactory().createEntityManager();&#10;        try {&#10;            User user = em.createQuery(&quot;SELECT u FROM User u WHERE u.email = :email&quot;, User.class)&#10;                    .setParameter(&quot;email&quot;, email)&#10;                    .getSingleResult();&#10;            return Optional.of(user);&#10;        } catch (NoResultException e) {&#10;            return Optional.empty();&#10;        } finally {&#10;            em.close();&#10;        }&#10;    }&#10;&#10;    public List&lt;User&gt; findAll() {&#10;        EntityManager em = JpaUtil.getEntityManagerFactory().createEntityManager();&#10;        try {&#10;            return em.createQuery(&quot;SELECT u FROM User u&quot;, User.class).getResultList();&#10;        } finally {&#10;            em.close();&#10;        }&#10;    }&#10;&#10;    public void delete(Long id) {&#10;        EntityManager em = JpaUtil.getEntityManagerFactory().createEntityManager();&#10;        try {&#10;            em.getTransaction().begin();&#10;            User user = em.find(User.class, id);&#10;            if (user != null) {&#10;                em.remove(user);&#10;            }&#10;            em.getTransaction().commit();&#10;        } catch (Exception e) {&#10;            if (em.getTransaction().isActive()) {&#10;                em.getTransaction().rollback();&#10;            }&#10;            throw e;&#10;        } finally {&#10;            em.close();&#10;        }&#10;    }&#10;&#10;    public Optional&lt;MedecinGeneraliste&gt; findMedecinGeneralisteById(Long id) {&#10;        EntityManager em = JpaUtil.getEntityManagerFactory().createEntityManager();&#10;        try {&#10;            TypedQuery&lt;MedecinGeneraliste&gt; query = em.createQuery(&#10;                    &quot;SELECT m FROM MedecinGeneraliste m WHERE m.id = :id&quot;, MedecinGeneraliste.class);&#10;            query.setParameter(&quot;id&quot;, id);&#10;            MedecinGeneraliste medecin = query.getSingleResult();&#10;            return Optional.ofNullable(medecin);&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;            return Optional.empty();&#10;        } finally {&#10;            em.close();&#10;        }&#10;    }&#10;&#10;    public boolean authenticate(String email, String password) {&#10;        Optional&lt;User&gt; userOpt = findByEmail(email);&#10;        if (userOpt.isPresent()) {&#10;            User user = userOpt.get();&#10;            // Utiliser BCrypt pour vérifier le mot de passe&#10;            return PasswordUtil.checkPassword(password, user.getMotDePasse());&#10;        }&#10;        return false;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package org.platform_expertise_medicle.DAO;&#10;&#10;import jakarta.persistence.EntityManager;&#10;import jakarta.persistence.NoResultException;&#10;import jakarta.persistence.TypedQuery;&#10;import org.platform_expertise_medicle.model.MedecinGeneraliste;&#10;import org.platform_expertise_medicle.model.User;&#10;import org.platform_expertise_medicle.util.JpaUtil;&#10;import org.platform_expertise_medicle.util.PasswordUtil;&#10;&#10;import java.util.List;&#10;import java.util.Optional;&#10;&#10;public class UserDAO {&#10;&#10;    public User save(User user) {&#10;        EntityManager em = JpaUtil.getEntityManagerFactory().createEntityManager();&#10;        try {&#10;            em.getTransaction().begin();&#10;            // Hacher le mot de passe avant de sauvegarder (seulement si ce n'est pas déjà haché)&#10;            if (user.getMotDePasse() != null &amp;&amp; !user.getMotDePasse().startsWith(&quot;$2a$&quot;)) {&#10;                user.setMotDePasse(PasswordUtil.hashPassword(user.getMotDePasse()));&#10;            }&#10;            if (user.getId() == 0) {&#10;                em.persist(user);&#10;            } else {&#10;                user = em.merge(user);&#10;            }&#10;            em.getTransaction().commit();&#10;            return user;&#10;        } catch (Exception e) {&#10;            if (em.getTransaction().isActive()) {&#10;                em.getTransaction().rollback();&#10;            }&#10;            throw e;&#10;        } finally {&#10;            em.close();&#10;        }&#10;    }&#10;&#10;    public Optional&lt;User&gt; findById(Long id) {&#10;        EntityManager em = JpaUtil.getEntityManagerFactory().createEntityManager();&#10;        try {&#10;            User user = em.find(User.class, id);&#10;            return Optional.ofNullable(user);&#10;        } finally {&#10;            em.close();&#10;        }&#10;    }&#10;&#10;    public Optional&lt;User&gt; findByEmail(String email) {&#10;        EntityManager em = JpaUtil.getEntityManagerFactory().createEntityManager();&#10;        try {&#10;            User user = em.createQuery(&quot;SELECT u FROM User u WHERE u.email = :email&quot;, User.class)&#10;                    .setParameter(&quot;email&quot;, email)&#10;                    .getSingleResult();&#10;            return Optional.of(user);&#10;        } catch (NoResultException e) {&#10;            return Optional.empty();&#10;        } finally {&#10;            em.close();&#10;        }&#10;    }&#10;&#10;    public List&lt;User&gt; findAll() {&#10;        EntityManager em = JpaUtil.getEntityManagerFactory().createEntityManager();&#10;        try {&#10;            return em.createQuery(&quot;SELECT u FROM User u&quot;, User.class).getResultList();&#10;        } finally {&#10;            em.close();&#10;        }&#10;    }&#10;&#10;    public void delete(Long id) {&#10;        EntityManager em = JpaUtil.getEntityManagerFactory().createEntityManager();&#10;        try {&#10;            em.getTransaction().begin();&#10;            User user = em.find(User.class, id);&#10;            if (user != null) {&#10;                em.remove(user);&#10;            }&#10;            em.getTransaction().commit();&#10;        } catch (Exception e) {&#10;            if (em.getTransaction().isActive()) {&#10;                em.getTransaction().rollback();&#10;            }&#10;            throw e;&#10;        } finally {&#10;            em.close();&#10;        }&#10;    }&#10;&#10;    public Optional&lt;MedecinGeneraliste&gt; findMedecinGeneralisteById(Long id) {&#10;        EntityManager em = JpaUtil.getEntityManagerFactory().createEntityManager();&#10;        try {&#10;            TypedQuery&lt;MedecinGeneraliste&gt; query = em.createQuery(&#10;                    &quot;SELECT m FROM MedecinGeneraliste m WHERE m.id = :id&quot;, MedecinGeneraliste.class);&#10;            query.setParameter(&quot;id&quot;, id);&#10;            MedecinGeneraliste medecin = query.getSingleResult();&#10;            return Optional.ofNullable(medecin);&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;            return Optional.empty();&#10;        } finally {&#10;            em.close();&#10;        }&#10;    }&#10;&#10;    public boolean authenticate(String email, String password) {&#10;        Optional&lt;User&gt; userOpt = findByEmail(email);&#10;        if (userOpt.isPresent()) {&#10;            User user = userOpt.get();&#10;            // Utiliser BCrypt pour vérifier le mot de passe&#10;            return PasswordUtil.checkPassword(password, user.getMotDePasse());&#10;        }&#10;        return false;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/webapp/generaliste/selection-specialiste-creneau.jsp">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/webapp/generaliste/selection-specialiste-creneau.jsp" />
              <option name="updatedContent" value="&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&#10;&lt;%@ taglib uri=&quot;http://java.sun.com/jsp/jstl/core&quot; prefix=&quot;c&quot; %&gt;&#10;&lt;%&#10;    if (session.getAttribute(&quot;userEmail&quot;) == null) {&#10;        response.sendRedirect(request.getContextPath() + &quot;/auth/login&quot;);&#10;        return;&#10;    }&#10;%&gt;&#10;&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;fr&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Sélection Spécialiste &amp; Créneau&lt;/title&gt;&#10;    &lt;script src=&quot;https://cdn.tailwindcss.com&quot;&gt;&lt;/script&gt;&#10;&lt;/head&gt;&#10;&lt;body class=&quot;bg-gray-50&quot;&gt;&#10;&#10;&lt;header class=&quot;bg-gradient-to-r from-green-600 to-green-800 text-white shadow-lg&quot;&gt;&#10;    &lt;div class=&quot;container mx-auto px-6 py-4 flex justify-between items-center&quot;&gt;&#10;        &lt;h1 class=&quot;text-2xl font-bold&quot;&gt; Réservation de Consultation&lt;/h1&gt;&#10;        &lt;div class=&quot;flex items-center gap-4&quot;&gt;&#10;            &lt;a href=&quot;${pageContext.request.contextPath}/generaliste/dashboard&quot;&#10;               class=&quot;text-sm hover:underline&quot;&gt;← Retour au dashboard&lt;/a&gt;&#10;            &lt;span class=&quot;text-sm&quot;&gt;‍⚕️ Dr. ${sessionScope.userName}&lt;/span&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/header&gt;&#10;&#10;&lt;main class=&quot;container mx-auto px-6 py-8&quot;&gt;&#10;&#10;    &lt;!-- Info Patient --&gt;&#10;    &lt;c:if test=&quot;${not empty patient}&quot;&gt;&#10;        &lt;div class=&quot;bg-blue-50 border-l-4 border-blue-600 p-4 rounded mb-6&quot;&gt;&#10;            &lt;p class=&quot;text-gray-800 font-semibold&quot;&gt; Patient : ${patient.prenom} ${patient.nom}&lt;/p&gt;&#10;            &lt;p class=&quot;text-gray-600 text-sm&quot;&gt;Consultation en cours de création...&lt;/p&gt;&#10;        &lt;/div&gt;&#10;    &lt;/c:if&gt;&#10;&#10;    &lt;!-- Messages d'erreur --&gt;&#10;    &lt;c:if test=&quot;${not empty sessionScope.error}&quot;&gt;&#10;        &lt;div class=&quot;bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6&quot;&gt;❌ ${sessionScope.error}&lt;/div&gt;&#10;        &lt;c:remove var=&quot;error&quot; scope=&quot;session&quot; /&gt;&#10;    &lt;/c:if&gt;&#10;&#10;    &lt;!-- Barre de progression --&gt;&#10;    &lt;div class=&quot;mb-8&quot;&gt;&#10;        &lt;div class=&quot;flex items-center justify-center&quot;&gt;&#10;            &lt;div class=&quot;flex items-center&quot;&gt;&#10;                &lt;div class=&quot;flex items-center ${empty specialiste ? 'text-green-600' : 'text-gray-400'}&quot;&gt;&#10;                    &lt;div class=&quot;w-10 h-10 rounded-full ${empty specialiste ? 'bg-green-600' : 'bg-green-500'} text-white flex items-center justify-center font-bold&quot;&gt;&#10;                        ${empty specialiste ? '1' : '✓'}&#10;                    &lt;/div&gt;&#10;                    &lt;span class=&quot;ml-2 font-semibold&quot;&gt;Spécialiste&lt;/span&gt;&#10;                &lt;/div&gt;&#10;                &#10;                &lt;div class=&quot;w-24 h-1 ${not empty specialiste ? 'bg-green-500' : 'bg-gray-300'} mx-4&quot;&gt;&lt;/div&gt;&#10;                &#10;                &lt;div class=&quot;flex items-center ${not empty specialiste ? 'text-green-600' : 'text-gray-400'}&quot;&gt;&#10;                    &lt;div class=&quot;w-10 h-10 rounded-full ${not empty specialiste ? 'bg-green-600' : 'bg-gray-300'} text-white flex items-center justify-center font-bold&quot;&gt;&#10;                        2&#10;                    &lt;/div&gt;&#10;                    &lt;span class=&quot;ml-2 font-semibold&quot;&gt;Créneau&lt;/span&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;!-- ÉTAPE 1 : Sélection du Spécialiste --&gt;&#10;    &lt;c:if test=&quot;${empty specialiste}&quot;&gt;&#10;        &lt;div class=&quot;bg-white rounded-xl shadow-md p-6 mb-8&quot;&gt;&#10;            &lt;h2 class=&quot;text-xl font-bold text-gray-800 mb-4&quot;&gt; Étape 1/2 : Choisissez un spécialiste&lt;/h2&gt;&#10;            &lt;p class=&quot;text-gray-600 mb-6&quot;&gt;Sélectionnez un médecin spécialiste pour voir ses créneaux disponibles&lt;/p&gt;&#10;&#10;            &lt;c:choose&gt;&#10;                &lt;c:when test=&quot;${not empty specialistes}&quot;&gt;&#10;                    &lt;div class=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6&quot;&gt;&#10;                        &lt;c:forEach var=&quot;spec&quot; items=&quot;${specialistes}&quot;&gt;&#10;                            &lt;a href=&quot;?specialisteId=${spec.id}&quot; &#10;                               class=&quot;block border-2 border-gray-200 rounded-lg p-6 hover:border-green-500 hover:shadow-lg transition&quot;&gt;&#10;                                &lt;div class=&quot;flex items-center mb-4&quot;&gt;&#10;                                    &lt;div class=&quot;bg-green-100 text-green-700 rounded-full w-16 h-16 flex items-center justify-center text-2xl font-bold&quot;&gt;&#10;                                        ${spec.nom.substring(0, 1)}${spec.prenom.substring(0, 1)}&#10;                                    &lt;/div&gt;&#10;                                    &lt;div class=&quot;ml-4&quot;&gt;&#10;                                        &lt;h3 class=&quot;font-bold text-lg text-gray-800&quot;&gt;Dr. ${spec.nom} ${spec.prenom}&lt;/h3&gt;&#10;                                        &lt;p class=&quot;text-sm text-gray-600&quot;&gt;${spec.specialite}&lt;/p&gt;&#10;                                    &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                                &#10;                                &lt;div class=&quot;mb-4&quot;&gt;&#10;                                    &lt;p class=&quot;text-sm text-gray-600&quot;&gt;&#10;                                        &lt;span class=&quot;font-semibold&quot;&gt;Email :&lt;/span&gt; ${spec.email}&#10;                                    &lt;/p&gt;&#10;                                    &lt;c:if test=&quot;${not empty spec.tarif}&quot;&gt;&#10;                                        &lt;p class=&quot;text-sm text-gray-600&quot;&gt;&#10;                                            &lt;span class=&quot;font-semibold&quot;&gt;Tarif :&lt;/span&gt; ${spec.tarif} DH&#10;                                        &lt;/p&gt;&#10;                                    &lt;/c:if&gt;&#10;                                &lt;/div&gt;&#10;&#10;                                &lt;div class=&quot;w-full bg-green-600 hover:bg-green-700 text-white text-center font-semibold py-2 rounded-lg transition&quot;&gt;&#10;                                    Sélectionner →&#10;                                &lt;/div&gt;&#10;                            &lt;/a&gt;&#10;                        &lt;/c:forEach&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/c:when&gt;&#10;                &lt;c:otherwise&gt;&#10;                    &lt;div class=&quot;text-center py-12&quot;&gt;&#10;                        &lt;div class=&quot;text-6xl mb-4&quot;&gt;‍⚕️&lt;/div&gt;&#10;                        &lt;p class=&quot;text-gray-500&quot;&gt;Aucun spécialiste disponible pour le moment&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/c:otherwise&gt;&#10;            &lt;/c:choose&gt;&#10;        &lt;/div&gt;&#10;    &lt;/c:if&gt;&#10;&#10;    &lt;!-- ÉTAPE 2 : Sélection du Créneau --&gt;&#10;    &lt;c:if test=&quot;${not empty specialiste}&quot;&gt;&#10;        &lt;!-- Info Spécialiste sélectionné --&gt;&#10;        &lt;div class=&quot;bg-green-50 border-l-4 border-green-600 p-4 rounded mb-6 flex justify-between items-center&quot;&gt;&#10;            &lt;div&gt;&#10;                &lt;p class=&quot;text-gray-800 font-semibold&quot;&gt;‍⚕️ Spécialiste sélectionné : Dr. ${specialiste.nom} ${specialiste.prenom}&lt;/p&gt;&#10;                &lt;p class=&quot;text-gray-600 text-sm&quot;&gt;${specialiste.specialite} - ${specialiste.tarif} DH&lt;/p&gt;&#10;            &lt;/div&gt;&#10;            &lt;a href=&quot;?&quot; class=&quot;text-sm text-green-700 hover:text-green-900 font-semibold&quot;&gt;&#10;                ← Changer de spécialiste&#10;            &lt;/a&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Sélection de date et créneaux --&gt;&#10;        &lt;div class=&quot;bg-white rounded-xl shadow-md p-6&quot;&gt;&#10;            &lt;h2 class=&quot;text-xl font-bold text-gray-800 mb-4&quot;&gt; Étape 2/2 : Sélectionnez un créneau&lt;/h2&gt;&#10;            &#10;            &lt;form method=&quot;GET&quot; class=&quot;flex gap-4 items-end mb-6&quot;&gt;&#10;                &lt;input type=&quot;hidden&quot; name=&quot;specialisteId&quot; value=&quot;${param.specialisteId}&quot;&gt;&#10;&#10;                &lt;div class=&quot;flex-1&quot;&gt;&#10;                    &lt;label class=&quot;block text-sm font-medium text-gray-700 mb-2&quot;&gt;Choisir une date&lt;/label&gt;&#10;                    &lt;input type=&quot;date&quot; name=&quot;date&quot; required&#10;                           value=&quot;${selectedDate}&quot;&#10;                           min=&quot;&lt;%= java.time.LocalDate.now() %&gt;&quot;&#10;                           class=&quot;w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500&quot;&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;button type=&quot;submit&quot; class=&quot;bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 transition&quot;&gt;&#10;                    Voir les créneaux&#10;                &lt;/button&gt;&#10;            &lt;/form&gt;&#10;&#10;            &lt;!-- Liste des créneaux --&gt;&#10;            &lt;c:if test=&quot;${not empty selectedDate}&quot;&gt;&#10;                &lt;div class=&quot;border-t pt-6&quot;&gt;&#10;                    &lt;h3 class=&quot;text-lg font-bold text-gray-800 mb-4&quot;&gt;Créneaux disponibles pour le ${selectedDate}&lt;/h3&gt;&#10;&#10;                    &lt;c:choose&gt;&#10;                        &lt;c:when test=&quot;${not empty creneauxDisponibles}&quot;&gt;&#10;                            &lt;div class=&quot;grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4&quot;&gt;&#10;                                &lt;c:forEach var=&quot;creneau&quot; items=&quot;${creneauxDisponibles}&quot;&gt;&#10;                                    &lt;form method=&quot;POST&quot; action=&quot;${pageContext.request.contextPath}/generaliste/selection-specialiste-creneau&quot;&gt;&#10;                                        &lt;input type=&quot;hidden&quot; name=&quot;creneauId&quot; value=&quot;${creneau.id}&quot;&gt;&#10;&#10;                                        &lt;button type=&quot;submit&quot;&#10;                                                class=&quot;w-full bg-green-50 hover:bg-green-100 border-2 border-green-200 hover:border-green-500 rounded-lg p-4 text-center transition&quot;&gt;&#10;                                            &lt;div class=&quot;text-lg font-bold text-green-700&quot;&gt;${creneau.creneauFormate}&lt;/div&gt;&#10;                                            &lt;div class=&quot;text-xs text-green-600 mt-1&quot;&gt;✅ Disponible&lt;/div&gt;&#10;                                        &lt;/button&gt;&#10;                                    &lt;/form&gt;&#10;                                &lt;/c:forEach&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/c:when&gt;&#10;                        &lt;c:otherwise&gt;&#10;                            &lt;div class=&quot;bg-yellow-50 border border-yellow-200 rounded-lg p-6 text-center&quot;&gt;&#10;                                &lt;div class=&quot;text-5xl mb-3&quot;&gt;&lt;/div&gt;&#10;                                &lt;p class=&quot;text-yellow-800 font-semibold&quot;&gt;Aucun créneau disponible pour cette date&lt;/p&gt;&#10;                                &lt;p class=&quot;text-yellow-600 text-sm mt-2&quot;&gt;Essayez une autre date ou contactez le spécialiste&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/c:otherwise&gt;&#10;                    &lt;/c:choose&gt;&#10;                &lt;/div&gt;&#10;            &lt;/c:if&gt;&#10;&#10;            &lt;c:if test=&quot;${empty selectedDate}&quot;&gt;&#10;                &lt;div class=&quot;bg-gray-50 border border-gray-200 rounded-lg p-6 text-center&quot;&gt;&#10;                    &lt;div class=&quot;text-5xl mb-3&quot;&gt;&lt;/div&gt;&#10;                    &lt;p class=&quot;text-gray-600&quot;&gt;Sélectionnez une date pour voir les créneaux disponibles&lt;/p&gt;&#10;                &lt;/div&gt;&#10;            &lt;/c:if&gt;&#10;        &lt;/div&gt;&#10;    &lt;/c:if&gt;&#10;&#10;&lt;/main&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>